; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
lib_deps =
    https://github.com/richievos/StepperDriver
    ; Using a fork of this to get cleaner compilation on desktop
    ; waspinator/AccelStepper@^1.64
    https://github.com/richievos/AccelStepper.git

[env_embedded]
platform = espressif32 @ ^6.2.0
board = esp32dev
framework = arduino
monitor_speed = 115200

lib_deps =
    ${env.lib_deps}
    bblanchon/ArduinoJson @ ^6.20.1
    ; hsaturn/TinyMqtt @ 1.0.0
    ; https://github.com/hsaturn/TinyMqtt.git#1.0.0
    ; my main fixes a connectivity issue: https://github.com/hsaturn/TinyMqtt/pull/72
    ; and a memory leak: https://github.com/hsaturn/TinyMqtt/pull/74
    https://github.com/richievos/TinyMqtt.git#main

    ArduinoOTA @ ^2.0.0

    arduino-libraries/NTPClient

    adafruit/Adafruit BusIO@^1.14.1
    adafruit/Adafruit GFX Library @ ^1.11.5
    adafruit/Adafruit SSD1306@^2.5.7

test_filter =
    test_embedded/*

build_flags =
    '-std=gnu++17'
build_unflags =
    '-std=gnu++11'


[env:esp32dev]
extends = env_embedded

build_flags =
    ${env_embedded.build_flags}
    '-D BOARD_ESP32'
    '-D OPT_BUFF_NAME=reef-buff'


lib_deps =
    ${env_embedded.lib_deps}

upload_protocol = espota
upload_port = "reef-buff.local"

[env:mks_dlc32]
extends = env_embedded

build_flags =
    ${env_embedded.build_flags}
    '-D BOARD_MKS_DLC32'
    '-D OPT_BUFF_NAME=reef-buff-mks'
    -D LV_CONF_INCLUDE_SIMPLE
    ; -D LV_CONF_PATH=
    -D USER_SETUP_LOADED=1                        ; Set this settings as valid
    -include 'lib/displays/UserSetup.h'


lib_deps =
    ${env_embedded.lib_deps}
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; Following are copied from the MKS repo
    ; TFT_eSPI is this with minor tweaks to UserSetup.h and adding a dma function:
    ; https://github.com/Bodmer/TFT_eSPI#2.3.70
    TFT_eSPI=symlink://mks/TFT_eSPI
    ESP32SSDP=symlink://mks/ESP32SSDP

    TMCStepper

    ; lvgl/lvgl@^8.3.7
    ; this is what mk2s is pinned to
    ; https://github.com/makerbase-mks/LVGL-6.1.1-MKS

    ; https://github.com/makerbase-mks/MKS-DLC32-FIRMWARE.git

; https://docs.platformio.org/en/latest/librarymanager/ldf.html#ldf-mode
; Required to make sure SPIFFS.h is available for TFT_eSPI
lib_ldf_mode = deep+

; Makerbase
board_build.flash_mode = dio

board_build.partitions = huge_app.csv
upload_speed = 300000

board_build.filesystem = spiffs


[env:desktop]
platform = native
; https://docs.platformio.org/en/latest/librarymanager/ldf.html#ldf-mode
lib_ldf_mode = chain+

;  https://community.platformio.org/t/using-native-platform-with-arduinofake-and-arduino-platform-libraries/12071
; makes ZZZ dep work
lib_compat_mode = off

build_flags =
    '-std=gnu++17' ; required to avoid a bunch of ArduinoFake compilation errors
    '-D ARDUINO=100' ; fake an arduino version to avoid AccelStepper compilation errors
    '-I.pio/libdeps/desktop/ArduinoFake/src' ; force Arduino.h to properly show up in the path for AccelStepper
build_unflags =
    '-DUNITY_INCLUDE_CONFIG_H'
    '-std=gnu++11'

; test_filter =
;     test_native/*

build_src_filter =
    ${env.build_src_filter}
    -<**/main.cpp>
    -<**/inputs.h>
    +<**/../test/**/*.cpp>
    +<**/../test/**/*.h>


lib_deps =
    ${env.lib_deps}
    ; using the absolute latest to get Stream.h fixes:
    ; https://github.com/FabioBatSilva/ArduinoFake/commit/f37ca8a295e3f6b5eea57fba4f2b21e93d9b0962
    https://github.com/FabioBatSilva/ArduinoFake

    Unity @ ^2.4.1
